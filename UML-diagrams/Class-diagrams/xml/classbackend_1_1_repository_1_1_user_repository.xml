<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classbackend_1_1_repository_1_1_user_repository" kind="class" language="C#" prot="public">
    <compoundname>backend::Repository::UserRepository</compoundname>
    <basecompoundref refid="interfacebackend_1_1_interfaces_1_1_i_user_repository" prot="public" virt="non-virtual">backend.Interfaces.IUserRepository</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classbackend_1_1_repository_1_1_user_repository_1a8ac433df78dff2867da8500eee915cf4" prot="private" static="no" mutable="no">
        <type>readonly UserManager&lt; <ref refid="classbackend_1_1_models_1_1_user" kindref="compound">User</ref> &gt;</type>
        <definition>readonly UserManager&lt;User&gt; backend.Repository.UserRepository._userManager</definition>
        <argsstring></argsstring>
        <name>_userManager</name>
        <qualifiedname>backend.Repository.UserRepository._userManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/DATA_JAKI/FAKS/PROGI/TravelTales/travel-tales-app/backend/Repository/UserRepository.cs" line="18" column="38" bodyfile="C:/DATA_JAKI/FAKS/PROGI/TravelTales/travel-tales-app/backend/Repository/UserRepository.cs" bodystart="18" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classbackend_1_1_repository_1_1_user_repository_1a6d5cdae6de4a6d0db811457d19c2bb3e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>backend.Repository.UserRepository.UserRepository</definition>
        <argsstring>(UserManager&lt; User &gt; userManager)</argsstring>
        <name>UserRepository</name>
        <qualifiedname>backend.Repository.UserRepository.UserRepository</qualifiedname>
        <param>
          <type>UserManager&lt; <ref refid="classbackend_1_1_models_1_1_user" kindref="compound">User</ref> &gt;</type>
          <declname>userManager</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/DATA_JAKI/FAKS/PROGI/TravelTales/travel-tales-app/backend/Repository/UserRepository.cs" line="19" column="16" bodyfile="C:/DATA_JAKI/FAKS/PROGI/TravelTales/travel-tales-app/backend/Repository/UserRepository.cs" bodystart="19" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classbackend_1_1_repository_1_1_user_repository_1a3b75769f78aefe95933ec63d24bda940" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>async Task&lt; <ref refid="classbackend_1_1_models_1_1_user" kindref="compound">User</ref>?&gt;</type>
        <definition>async Task&lt; User?&gt; backend.Repository.UserRepository.DeleteAsync</definition>
        <argsstring>(string id)</argsstring>
        <name>DeleteAsync</name>
        <qualifiedname>backend.Repository.UserRepository.DeleteAsync</qualifiedname>
        <reimplements refid="interfacebackend_1_1_interfaces_1_1_i_user_repository_1ab47efc6276134223fec9251f424cf33b">DeleteAsync</reimplements>
        <param>
          <type>string</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/DATA_JAKI/FAKS/PROGI/TravelTales/travel-tales-app/backend/Repository/UserRepository.cs" line="24" column="27" bodyfile="C:/DATA_JAKI/FAKS/PROGI/TravelTales/travel-tales-app/backend/Repository/UserRepository.cs" bodystart="24" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classbackend_1_1_repository_1_1_user_repository_1ab5a17f8ecbcb70ce8af3f55df80721d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>async Task&lt; List&lt; <ref refid="classbackend_1_1_dtos_1_1_user_1_1_user_dto" kindref="compound">UserDto</ref> &gt; &gt;</type>
        <definition>async Task&lt; List&lt; UserDto &gt; &gt; backend.Repository.UserRepository.GetAllAsync</definition>
        <argsstring>()</argsstring>
        <name>GetAllAsync</name>
        <qualifiedname>backend.Repository.UserRepository.GetAllAsync</qualifiedname>
        <reimplements refid="interfacebackend_1_1_interfaces_1_1_i_user_repository_1a269df732e55b1eee000f6db4fff1bb1c">GetAllAsync</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/DATA_JAKI/FAKS/PROGI/TravelTales/travel-tales-app/backend/Repository/UserRepository.cs" line="35" column="27" bodyfile="C:/DATA_JAKI/FAKS/PROGI/TravelTales/travel-tales-app/backend/Repository/UserRepository.cs" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classbackend_1_1_repository_1_1_user_repository_1a2b45b49ca7ae59a329eb6d542da3eac7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>async Task&lt; <ref refid="classbackend_1_1_models_1_1_user" kindref="compound">User</ref>?&gt;</type>
        <definition>async Task&lt; User?&gt; backend.Repository.UserRepository.GetByIdAsync</definition>
        <argsstring>(string id)</argsstring>
        <name>GetByIdAsync</name>
        <qualifiedname>backend.Repository.UserRepository.GetByIdAsync</qualifiedname>
        <reimplements refid="interfacebackend_1_1_interfaces_1_1_i_user_repository_1a3d8c257574f10146e0d2b22bf9ef7eb4">GetByIdAsync</reimplements>
        <param>
          <type>string</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/DATA_JAKI/FAKS/PROGI/TravelTales/travel-tales-app/backend/Repository/UserRepository.cs" line="39" column="27" bodyfile="C:/DATA_JAKI/FAKS/PROGI/TravelTales/travel-tales-app/backend/Repository/UserRepository.cs" bodystart="39" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classbackend_1_1_repository_1_1_user_repository_1a2b306f56a7d85fcf34b951c04091885c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>async Task&lt; <ref refid="classbackend_1_1_models_1_1_user" kindref="compound">User</ref>?&gt;</type>
        <definition>async Task&lt; User?&gt; backend.Repository.UserRepository.UpdateAsync</definition>
        <argsstring>(string id, UpdateDto updateDto)</argsstring>
        <name>UpdateAsync</name>
        <qualifiedname>backend.Repository.UserRepository.UpdateAsync</qualifiedname>
        <reimplements refid="interfacebackend_1_1_interfaces_1_1_i_user_repository_1a36bfdcf40fa9b83513ea956febb71b72">UpdateAsync</reimplements>
        <param>
          <type>string</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="classbackend_1_1_dtos_1_1_account_1_1_update_dto" kindref="compound">UpdateDto</ref></type>
          <declname>updateDto</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/DATA_JAKI/FAKS/PROGI/TravelTales/travel-tales-app/backend/Repository/UserRepository.cs" line="45" column="27" bodyfile="C:/DATA_JAKI/FAKS/PROGI/TravelTales/travel-tales-app/backend/Repository/UserRepository.cs" bodystart="45" bodyend="76"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>IUserRepository</label>
        <link refid="interfacebackend_1_1_interfaces_1_1_i_user_repository"/>
      </node>
      <node id="1">
        <label>backend.Repository.UserRepository</label>
        <link refid="classbackend_1_1_repository_1_1_user_repository"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>IUserRepository</label>
        <link refid="interfacebackend_1_1_interfaces_1_1_i_user_repository"/>
      </node>
      <node id="1">
        <label>backend.Repository.UserRepository</label>
        <link refid="classbackend_1_1_repository_1_1_user_repository"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/DATA_JAKI/FAKS/PROGI/TravelTales/travel-tales-app/backend/Repository/UserRepository.cs" line="16" column="11" bodyfile="C:/DATA_JAKI/FAKS/PROGI/TravelTales/travel-tales-app/backend/Repository/UserRepository.cs" bodystart="17" bodyend="77"/>
    <listofallmembers>
      <member refid="classbackend_1_1_repository_1_1_user_repository_1a8ac433df78dff2867da8500eee915cf4" prot="private" virt="non-virtual"><scope>backend::Repository::UserRepository</scope><name>_userManager</name></member>
      <member refid="classbackend_1_1_repository_1_1_user_repository_1a3b75769f78aefe95933ec63d24bda940" prot="public" virt="non-virtual"><scope>backend::Repository::UserRepository</scope><name>DeleteAsync</name></member>
      <member refid="classbackend_1_1_repository_1_1_user_repository_1ab5a17f8ecbcb70ce8af3f55df80721d6" prot="public" virt="non-virtual"><scope>backend::Repository::UserRepository</scope><name>GetAllAsync</name></member>
      <member refid="classbackend_1_1_repository_1_1_user_repository_1a2b45b49ca7ae59a329eb6d542da3eac7" prot="public" virt="non-virtual"><scope>backend::Repository::UserRepository</scope><name>GetByIdAsync</name></member>
      <member refid="classbackend_1_1_repository_1_1_user_repository_1a2b306f56a7d85fcf34b951c04091885c" prot="public" virt="non-virtual"><scope>backend::Repository::UserRepository</scope><name>UpdateAsync</name></member>
      <member refid="classbackend_1_1_repository_1_1_user_repository_1a6d5cdae6de4a6d0db811457d19c2bb3e" prot="public" virt="non-virtual"><scope>backend::Repository::UserRepository</scope><name>UserRepository</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
